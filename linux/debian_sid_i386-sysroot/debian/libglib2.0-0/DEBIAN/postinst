#!/bin/sh
set -e


handle_triggers () {
    local trigger
    local dirs

    for trigger in "$@"; do
        if ! [ -d $trigger ]; then
            continue
        fi
        case $trigger in
          /usr/share/glib-2.0/schemas)
            # This is triggered everytime an application installs a
            # GSettings schema
            "/usr/lib/i386-linux-gnu/glib-2.0/glib-compile-schemas" /usr/share/glib-2.0/schemas || true
            ;;

          "/usr/lib/i386-linux-gnu/gio/modules"|/usr/lib/gio/modules)
            # This is triggered everytime an application installs a GIO
            # module into /usr/lib/i386-linux-gnu/gio/modules or the
            # backwards-compatible /usr/lib/gio/modules directory

            # The /usr/lib/gio/modules directory is no longer shipped by
            # libglib2.0 itself so we need to check to avoid a warning from
            # gio-querymodules
            dirs="/usr/lib/i386-linux-gnu/gio/modules"
            if [ -d /usr/lib/gio/modules ] && [ $(dpkg --print-architecture) = "i386" ]; then
                dirs="$dirs /usr/lib/gio/modules"
            fi
            "/usr/lib/i386-linux-gnu/glib-2.0/gio-querymodules" $dirs || true
            ;;
        esac
    done
}

cleanup () {
    /usr/share/glib-2.0/clean-up-unmanaged-libraries \
        --bug-ref=896019 \
        "$@" \
        "i386-linux-gnu" \
        libglib-2.0.so.0
}

if [ "$1" = triggered ]; then
    handle_triggers $2
    exit 0
fi

# Clean up stale shared libraries if necessary. Do this before running
# glib-compile-schemas, gio-querymodules.
if ! cleanup; then
    echo "$0: Trying cleanup again with more logging..."
    cleanup --verbose
fi



# This is shipped in the .deb (see debian/libglib2.0-0.dirs) but would
# be removed if empty during upgrade by old versions of the postrm (#987913).
install -d "/usr/lib/i386-linux-gnu/gio/modules"

"/usr/lib/i386-linux-gnu/glib-2.0/glib-compile-schemas" /usr/share/glib-2.0/schemas || true
"/usr/lib/i386-linux-gnu/glib-2.0/gio-querymodules" "/usr/lib/i386-linux-gnu/gio/modules" || true

if [ -d /usr/lib/gio/modules ] && [ $(dpkg --print-architecture) = "i386" ]; then
    "/usr/lib/i386-linux-gnu/glib-2.0/gio-querymodules" /usr/lib/gio/modules || true
fi

# vim:set sw=4 sts=4 et:
